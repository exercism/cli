# You can find the GoReleaser documentation at http://goreleaser.com
version: 2
project_name: exercism

env:
  - CGO_ENABLED=0
builds:
  - id: release-build
    main: ./exercism/main.go
    mod_timestamp: "{{ .CommitTimestamp  }}"
    flags:
      - -trimpath # removes file system paths from compiled executable
    ldflags:
      - "-s -w" # strip debug symbols and DWARF debugging info
    goos:
      - darwin
      - linux
      - windows
      - freebsd
      - openbsd
    goarch:
      - amd64
      - 386
      - arm
      - arm64
      - ppc64
    goarm:
      - 5
      - 6
    ignore:
      - goos: openbsd
        goarch: arm
      - goos: freebsd
        goarch: arm
  - id: installer-build
    main: ./exercism/main.go
    mod_timestamp: "{{ .CommitTimestamp  }}"
    flags:
      - -trimpath # removes file system paths from compiled executable
    ldflags:
      - "-s -w" # strip debug symbols and DWARF debugging info
    goos:
      - windows
    goarch:
      - amd64
      - 386

changelog:
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"

archives:
  - id: release-archives
    builds:
      - release-build
    name_template: >-
      {{- .ProjectName }}-
      {{- .Version }}-
      {{- .Os }}-
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{- .Arch }}{{ end }}
      {{- if .Arm }}v{{- .Arm }}{{ end }}
    format_overrides:
      - goos: windows
        format: zip
    files:
      - shell/**
      - LICENSE
      - README.md
  - id: installer-archives
    builds:
      - installer-build
    name_template: >-
      {{- .ProjectName }}-
      {{- .Version }}-
      {{- .Os }}-
      {{- if eq .Arch "amd64" }}64bit
      {{- else if eq .Arch "386" }}32bit
      {{- else }}{{- .Arch }}{{ end }}
      {{- if .Arm }}v{{- .Arm }}{{ end }}
    format_overrides:
      - goos: windows
        format: zip
    files:
      - shell/**
      - LICENSE
      - README.md

checksum:
  name_template: "{{ .ProjectName }}_checksums.txt"
  ids:
    - release-archives
    - installer-archives

signs:
  - artifacts: checksum
    args:
      [
        "--batch",
        "-u",
        "{{ .Env.GPG_FINGERPRINT }}",
        "--output",
        "${signature}",
        "--detach-sign",
        "${artifact}",
      ]

release:
  # Repo in which the release will be created.
  # Default is extracted from the origin remote URL.
  github:
    owner: exercism
    name: cli

  # If set to true, will not auto-publish the release.
  # Default is false.
  draft: true

  # If set to auto, will mark the release as not ready for production
  # in case there is an indicator for this in the tag e.g. v1.0.0-rc1
  # If set to true, will mark the release as not ready for production.
  # Default is false.
  prerelease: auto

  # You can change the name of the GitHub release.
  # Default is `{{.Tag}}`
  name_template: "{{.ProjectName}}-v{{.Version}} {{.Env.USER}}"
